{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = '/api';\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n  // –î–æ–±–∞–≤–ª—è–µ–º withCredentials –µ—Å–ª–∏ API —Ç—Ä–µ–±—É–µ—Ç –∫—É–∫–∏/—Å–µ—Å—Å–∏–∏\n  // withCredentials: true\n});\n\n// –ò–Ω—Ç–µ—Ä—Ü–µ–ø—Ç–æ—Ä –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\n\n// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫\napi.interceptors.response.use(response => response, error => {\n  if (error.response) {\n    console.error('API Error:', error.response.status, error.response.data);\n    // –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –æ–±—Ä–∞–±–æ—Ç–∫—É –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö —Å—Ç–∞—Ç—É—Å –∫–æ–¥–æ–≤\n    if (error.response.status === 401) {\n      // –ù–∞–ø—Ä–∏–º–µ—Ä, –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤—Ö–æ–¥–∞\n      window.location.href = '/login';\n    }\n  } else if (error.request) {\n    console.error('API Error: No response received', error.request);\n  } else {\n    console.error('API Error:', error.message);\n  }\n  return Promise.reject(error);\n});\n\n// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö —Ñ–æ—Ä–º—ã –≤ —Ñ–æ—Ä–º–∞—Ç API\nconst transformQuizData = quizData => {\n  return {\n    title: quizData.quizTitle,\n    //description: quizData.quizDescription,\n    questions: quizData.questions.map(question => ({\n      question: question.text,\n      type: question.type,\n      options: question.options,\n      correct_option_index: question.type === 'single' ? question.correctOption : undefined,\n      correct_option_indexes: question.type === 'multiple' ? question.correctOptions : undefined\n    }))\n  };\n};\nexport default {\n  // –†–∞–±–æ—Ç–∞ —Å —Ç–µ—Å—Ç–∞–º–∏\n  getQuizzes() {\n    return api.get('/quizzes');\n  },\n  getQuiz(id) {\n    return api.get(`/quizzes/${id}`);\n  },\n  createQuiz: async quizData => {\n    // 1. –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∫–≤–∏–∑–æ–≤\n    const quizzesRes = await api.get('/quizzes');\n\n    // 2. –ù–∞—Ö–æ–¥–∏–º –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π ID —Å—Ä–µ–¥–∏ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∫–≤–∏–∑–æ–≤\n    const maxId = quizzesRes.data.reduce((max, quiz) => Math.max(max, quiz.id || 0), 0);\n\n    // 3. –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –Ω–æ–≤—ã–π ID (maxId + 1)\n    const newQuizId = maxId + 1;\n\n    // 4. –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–≤–∏–∑ —Å —É–∫–∞–∑–∞–Ω–∏–µ–º ID\n    const payload = {\n      id: newQuizId,\n      // –Ø–≤–Ω–æ –ø–µ—Ä–µ–¥–∞—ë–º ID!\n      title: quizData.quizTitle,\n      course_id: 0,\n      duration: 30,\n      max_grade: 100,\n      start_date: new Date().toISOString(),\n      end_date: new Date().toISOString(),\n      state_id: 1,\n      submited_date: new Date().toISOString()\n    };\n    return api.post('/quizzes', payload);\n  },\n  updateQuiz(id, quizData) {\n    const transformedData = transformQuizData(quizData);\n    return api.put(`/quizzes/${id}`, transformedData);\n  },\n  deleteQuiz(id) {\n    return api.delete(`/quizzes/${id}`);\n  },\n  // –†–∞–±–æ—Ç–∞ —Å –≤–æ–ø—Ä–æ—Å–∞–º–∏\n  getQuestions(quizId) {\n    return api.get(`/quizzes/${quizId}/questions`);\n  },\n  getQuestion(questionId) {\n    return api.get(`/questions/${questionId}`);\n  },\n  createQuestion(quizId, questionData) {\n    return api.post(`/quizzes/${quizId}/questions`, questionData);\n  },\n  updateQuestion(questionId, questionData) {\n    return api.put(`/questions/${questionId}`, questionData);\n  },\n  deleteQuestion(questionId) {\n    return api.delete(`/questions/${questionId}`);\n  },\n  // –†–∞–±–æ—Ç–∞ —Å –≤–∞—Ä–∏–∞–Ω—Ç–∞–º–∏ –æ—Ç–≤–µ—Ç–æ–≤\n  getOptions(questionId) {\n    return api.get(`/questions/${questionId}/options`);\n  },\n  createOption(questionId, optionData) {\n    return api.post(`/questions/${questionId}/options`, optionData);\n  },\n  updateOption(optionId, optionData) {\n    return api.put(`/qptions/${optionId}`, optionData);\n  },\n  deleteOption(optionId) {\n    return api.delete(`/options/${optionId}`);\n  },\n  // –†–∞–±–æ—Ç–∞ —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –æ—Ç–≤–µ—Ç–∞–º–∏\n  getCorrectAnswers(questionId) {\n    return api.get(`/questions/${questionId}/answers/correct`);\n  },\n  addCorrectAnswer(questionId, answerData) {\n    return api.post(`/questions/${questionId}/answers/correct`, answerData);\n  },\n  deleteCorrectAnswer(answerId) {\n    return api.delete(`/answers/correct/${answerId}`);\n  },\n  async saveQuizToServer(quizData) {\n    const {\n      quizTitle,\n      questions\n    } = quizData;\n    console.log(\"–°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–≤–∏–∑:\", quizTitle);\n    // 1) –°–æ–∑–¥–∞—ë–º —Å–∞–º –∫–≤–∏–∑\n    // ‚Ä¶ –≤–Ω—É—Ç—Ä–∏ saveQuizToServer ‚Ä¶\n    console.log(\"üëâ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ —Å–µ—Ä–≤–µ—Ä:\", {\n      title: quizTitle,\n      course_id: 1,\n      duration: 30,\n      maxgrade: 100,\n      startdate: new Date().toISOString(),\n      end_date: new Date().toISOString(),\n      stateid: 1\n    });\n    const quizRes = await api.post('/quizzes', {\n      title: quizTitle,\n      course_id: 1,\n      // —É–∂–µ –±—ã–ª–æ –≤–µ—Ä–Ω–æ\n      duration: 30,\n      // –≤–µ—Ä–Ω–æ\n      maxgrade: 100,\n      // ‚Üê –≤–º–µ—Å—Ç–æ max_grade\n      stateid: 1,\n      // ‚Üê –≤–º–µ—Å—Ç–æ state_id\n      startdate: new Date().toISOString(),\n      // ‚Üê –≤–º–µ—Å—Ç–æ start_date\n      end_date: new Date().toISOString() // ‚Üê –æ—Å—Ç–∞–≤–ª—è–µ–º underscore, —Å–µ—Ä–≤–µ—Ä –µ–≥–æ –ø—Ä–∏–Ω—è–ª\n    });\n    console.log('–°–æ–∑–¥–∞–Ω –∫–≤–∏–∑ —Å ID:', quizRes.data.id);\n    const quizId = quizRes.data.id;\n    console.log('–°–æ–∑–¥–∞–Ω –∫–≤–∏–∑ —Å ID:', quizId);\n\n    // 2) –î–æ–±–∞–≤–ª—è–µ–º –≤–æ–ø—Ä–æ—Å—ã\n    for (const q of questions) {\n      const questionRes = await api.post(`/quizzes/${quizId}/questions`, {\n        questiontext: q.question,\n        // –≤–º–µ—Å—Ç–æ questiontext\n        question_typeid: q.type === 'single' ? 1 : 2,\n        // –≤–º–µ—Å—Ç–æ question_typeid\n        quizid: quizId // –≤–º–µ—Å—Ç–æ quizid\n      });\n      const questionId = questionRes.data.id;\n      console.log('–î–æ–±–∞–≤–ª–µ–Ω –≤–æ–ø—Ä–æ—Å:', questionRes.data);\n\n      // 3) –î–æ–±–∞–≤–ª—è–µ–º –≤–∞—Ä–∏–∞–Ω—Ç—ã –æ—Ç–≤–µ—Ç–æ–≤\n      const optionIds = [];\n      for (const optText of q.options) {\n        const optRes = await api.post(`/questions/${questionId}/options`, {\n          option_text: optText,\n          question_id: questionId\n        });\n        optionIds.push(optRes.data.id);\n      }\n\n      // 4) –ü–æ–º–µ—á–∞–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã\n      if (q.type === 'single' && q.correct_option_index != null) {\n        await api.post(`/questions/${questionId}/answers/correct`, {\n          option_id: optionIds[q.correct_option_index],\n          question_id: questionId\n        });\n      }\n      if (q.type === 'multiple' && Array.isArray(q.correct_option_indexes)) {\n        for (const idx of q.correct_option_indexes) {\n          await api.post(`/questions/${questionId}/answers/correct`, {\n            option_id: optionIds[idx],\n            question_id: questionId\n          });\n        }\n      }\n    }\n    console.log(\"–ö–≤–∏–∑ —Å–æ—Ö—Ä–∞–Ω—ë–Ω –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ:\", quizId);\n    return quizRes;\n  },\n  loadQuizFromServer(id) {\n    return this.getQuiz(id);\n  },\n  updateQuizOnServer(id, quizData) {\n    return this.updateQuiz(id, quizData);\n  },\n  deleteQuizFromServer(id) {\n    return this.deleteQuiz(id);\n  },\n  // –ú–µ—Ç–æ–¥ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ YAML —Ñ–∞–π–ª–∞\n  uploadYamlFile(file) {\n    const formData = new FormData();\n    formData.append('file', file);\n    return api.post('/quizzes/upload', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n  },\n  getUsers() {\n    return api.get('/users');\n  }\n};","map":{"version":3,"names":["axios","API_BASE_URL","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","response","error","console","status","data","window","location","href","message","Promise","reject","transformQuizData","quizData","title","quizTitle","questions","map","question","text","type","options","correct_option_index","correctOption","undefined","correct_option_indexes","correctOptions","getQuizzes","get","getQuiz","id","createQuiz","quizzesRes","maxId","reduce","max","quiz","Math","newQuizId","payload","course_id","duration","max_grade","start_date","Date","toISOString","end_date","state_id","submited_date","post","updateQuiz","transformedData","put","deleteQuiz","delete","getQuestions","quizId","getQuestion","questionId","createQuestion","questionData","updateQuestion","deleteQuestion","getOptions","createOption","optionData","updateOption","optionId","deleteOption","getCorrectAnswers","addCorrectAnswer","answerData","deleteCorrectAnswer","answerId","saveQuizToServer","log","maxgrade","startdate","stateid","quizRes","q","questionRes","questiontext","question_typeid","quizid","optionIds","optText","optRes","option_text","question_id","push","option_id","Array","isArray","idx","loadQuizFromServer","updateQuizOnServer","deleteQuizFromServer","uploadYamlFile","file","formData","FormData","append","getUsers"],"sources":["C:/Users/IP/Desktop/do_slez/sum25_swp/Antimoodlo-front/src/services/Api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_BASE_URL = '/api';\r\n\r\nconst api = axios.create({\r\n  baseURL: API_BASE_URL,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n  // –î–æ–±–∞–≤–ª—è–µ–º withCredentials –µ—Å–ª–∏ API —Ç—Ä–µ–±—É–µ—Ç –∫—É–∫–∏/—Å–µ—Å—Å–∏–∏\r\n  // withCredentials: true\r\n});\r\n\r\n// –ò–Ω—Ç–µ—Ä—Ü–µ–ø—Ç–æ—Ä –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏\r\napi.interceptors.request.use((config) => {\r\n  const token = localStorage.getItem('token');\r\n  if (token) {\r\n    config.headers.Authorization = `Bearer ${token}`;\r\n  }\r\n  return config;\r\n});\r\n\r\n// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫\r\napi.interceptors.response.use(\r\n  (response) => response,\r\n  (error) => {\r\n    if (error.response) {\r\n      console.error('API Error:', error.response.status, error.response.data);\r\n      // –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –æ–±—Ä–∞–±–æ—Ç–∫—É –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö —Å—Ç–∞—Ç—É—Å –∫–æ–¥–æ–≤\r\n      if (error.response.status === 401) {\r\n        // –ù–∞–ø—Ä–∏–º–µ—Ä, –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤—Ö–æ–¥–∞\r\n        window.location.href = '/login';\r\n      }\r\n    } else if (error.request) {\r\n      console.error('API Error: No response received', error.request);\r\n    } else {\r\n      console.error('API Error:', error.message);\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö —Ñ–æ—Ä–º—ã –≤ —Ñ–æ—Ä–º–∞—Ç API\r\nconst transformQuizData = (quizData) => {\r\n  return {\r\n    title: quizData.quizTitle,\r\n    //description: quizData.quizDescription,\r\n    questions: quizData.questions.map(question => ({\r\n      question: question.text,\r\n      type: question.type,\r\n      options: question.options,\r\n      correct_option_index: question.type === 'single' ? question.correctOption : undefined,\r\n      correct_option_indexes: question.type === 'multiple' ? question.correctOptions : undefined\r\n    }))\r\n  };\r\n};\r\n\r\nexport default {\r\n  // –†–∞–±–æ—Ç–∞ —Å —Ç–µ—Å—Ç–∞–º–∏\r\n  getQuizzes() {\r\n    return api.get('/quizzes');\r\n  },\r\n  \r\n  getQuiz(id) {\r\n    return api.get(`/quizzes/${id}`);\r\n  },\r\n  \r\n  createQuiz: async (quizData) => {\r\n  // 1. –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∫–≤–∏–∑–æ–≤\r\n  const quizzesRes = await api.get('/quizzes');\r\n  \r\n  // 2. –ù–∞—Ö–æ–¥–∏–º –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π ID —Å—Ä–µ–¥–∏ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∫–≤–∏–∑–æ–≤\r\n  const maxId = quizzesRes.data.reduce((max, quiz) => \r\n    Math.max(max, quiz.id || 0), 0);\r\n  \r\n  // 3. –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –Ω–æ–≤—ã–π ID (maxId + 1)\r\n  const newQuizId = maxId + 1;\r\n\r\n  // 4. –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–≤–∏–∑ —Å —É–∫–∞–∑–∞–Ω–∏–µ–º ID\r\n  const payload = {\r\n    id: newQuizId, // –Ø–≤–Ω–æ –ø–µ—Ä–µ–¥–∞—ë–º ID!\r\n    title: quizData.quizTitle,\r\n    course_id: 0,\r\n    duration: 30,\r\n    max_grade: 100,\r\n    start_date: new Date().toISOString(),\r\n    end_date: new Date().toISOString(),\r\n    state_id: 1,\r\n    submited_date: new Date().toISOString()\r\n  };\r\n  return api.post('/quizzes', payload);\r\n},\r\n  \r\n  updateQuiz(id, quizData) {\r\n    const transformedData = transformQuizData(quizData);\r\n    return api.put(`/quizzes/${id}`, transformedData);\r\n  },\r\n  \r\n  deleteQuiz(id) {\r\n    return api.delete(`/quizzes/${id}`);\r\n  },\r\n\r\n  // –†–∞–±–æ—Ç–∞ —Å –≤–æ–ø—Ä–æ—Å–∞–º–∏\r\n  getQuestions(quizId) {\r\n    return api.get(`/quizzes/${quizId}/questions`);\r\n  },\r\n  \r\n  getQuestion(questionId) {\r\n    return api.get(`/questions/${questionId}`);\r\n  },\r\n  \r\n  createQuestion(quizId, questionData) {\r\n    return api.post(`/quizzes/${quizId}/questions`, questionData);\r\n  },\r\n  \r\n  updateQuestion(questionId, questionData) {\r\n    return api.put(`/questions/${questionId}`, questionData);\r\n  },\r\n  \r\n  deleteQuestion(questionId) {\r\n    return api.delete(`/questions/${questionId}`);\r\n  },\r\n\r\n  // –†–∞–±–æ—Ç–∞ —Å –≤–∞—Ä–∏–∞–Ω—Ç–∞–º–∏ –æ—Ç–≤–µ—Ç–æ–≤\r\n  getOptions(questionId) {\r\n    return api.get(`/questions/${questionId}/options`);\r\n  },\r\n  \r\n  createOption(questionId, optionData) {\r\n    return api.post(`/questions/${questionId}/options`, optionData);\r\n  },\r\n  \r\n  updateOption(optionId, optionData) {\r\n    return api.put(`/qptions/${optionId}`, optionData);\r\n  },\r\n  \r\n  deleteOption(optionId) {\r\n    return api.delete(`/options/${optionId}`);\r\n  },\r\n\r\n  // –†–∞–±–æ—Ç–∞ —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –æ—Ç–≤–µ—Ç–∞–º–∏\r\n  getCorrectAnswers(questionId) {\r\n    return api.get(`/questions/${questionId}/answers/correct`);\r\n  },\r\n  \r\n  addCorrectAnswer(questionId, answerData) {\r\n    return api.post(`/questions/${questionId}/answers/correct`, answerData);\r\n  },\r\n  \r\n  deleteCorrectAnswer(answerId) {\r\n    return api.delete(`/answers/correct/${answerId}`);\r\n  },\r\n\r\n  async saveQuizToServer(quizData) {\r\n    const { quizTitle, questions } = quizData;\r\n    console.log(\"–°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–≤–∏–∑:\", quizTitle);\r\n    // 1) –°–æ–∑–¥–∞—ë–º —Å–∞–º –∫–≤–∏–∑\r\n    // ‚Ä¶ –≤–Ω—É—Ç—Ä–∏ saveQuizToServer ‚Ä¶\r\n  console.log(\"üëâ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ —Å–µ—Ä–≤–µ—Ä:\", {\r\n    title:        quizTitle,\r\n    course_id:    1,\r\n    duration:     30,\r\n    maxgrade:    100,\r\n    startdate:   new Date().toISOString(),\r\n    end_date:     new Date().toISOString(),\r\n    stateid:     1\r\n  });\r\n\r\n  const quizRes = await api.post('/quizzes', {\r\n    title:     quizTitle,\r\n    course_id: 1,                      // —É–∂–µ –±—ã–ª–æ –≤–µ—Ä–Ω–æ\r\n    duration:  30,                     // –≤–µ—Ä–Ω–æ\r\n    maxgrade:  100,                    // ‚Üê –≤–º–µ—Å—Ç–æ max_grade\r\n    stateid:   1,                      // ‚Üê –≤–º–µ—Å—Ç–æ state_id\r\n    startdate: new Date().toISOString(), // ‚Üê –≤–º–µ—Å—Ç–æ start_date\r\n    end_date:  new Date().toISOString() // ‚Üê –æ—Å—Ç–∞–≤–ª—è–µ–º underscore, —Å–µ—Ä–≤–µ—Ä –µ–≥–æ –ø—Ä–∏–Ω—è–ª\r\n  });\r\n  console.log('–°–æ–∑–¥–∞–Ω –∫–≤–∏–∑ —Å ID:', quizRes.data.id);\r\n\r\n  const quizId = quizRes.data.id;\r\n  console.log('–°–æ–∑–¥–∞–Ω –∫–≤–∏–∑ —Å ID:', quizId);\r\n\r\n  // 2) –î–æ–±–∞–≤–ª—è–µ–º –≤–æ–ø—Ä–æ—Å—ã\r\n  for (const q of questions) {\r\n    const questionRes = await api.post(`/quizzes/${quizId}/questions`, {\r\n    questiontext: q.question,                // –≤–º–µ—Å—Ç–æ questiontext\r\n    question_typeid: q.type === 'single' ? 1 : 2, // –≤–º–µ—Å—Ç–æ question_typeid\r\n    quizid: quizId                           // –≤–º–µ—Å—Ç–æ quizid\r\n  });\r\n    const questionId = questionRes.data.id;\r\n    console.log('–î–æ–±–∞–≤–ª–µ–Ω –≤–æ–ø—Ä–æ—Å:', questionRes.data);\r\n\r\n    // 3) –î–æ–±–∞–≤–ª—è–µ–º –≤–∞—Ä–∏–∞–Ω—Ç—ã –æ—Ç–≤–µ—Ç–æ–≤\r\n    const optionIds = [];\r\n    for (const optText of q.options) {\r\n      const optRes = await api.post(\r\n        `/questions/${questionId}/options`,\r\n        {\r\n          option_text: optText,\r\n          question_id: questionId\r\n        }\r\n      );\r\n      optionIds.push(optRes.data.id);\r\n    }\r\n\r\n      // 4) –ü–æ–º–µ—á–∞–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã\r\n    if (q.type === 'single' && q.correct_option_index != null) {      \r\n      await api.post(`/questions/${questionId}/answers/correct`,{\r\n          option_id:   optionIds[q.correct_option_index],\r\n          question_id: questionId\r\n      }\r\n    );\r\n    }\r\n      if (q.type === 'multiple' && Array.isArray(q.correct_option_indexes)) {\r\n        for (const idx of q.correct_option_indexes) {\r\n          await api.post(\r\n            `/questions/${questionId}/answers/correct`,\r\n            {\r\n              option_id:   optionIds[idx],\r\n              question_id: questionId\r\n            }\r\n          );\r\n        }\r\n      }\r\n    }\r\n\r\n    console.log(\"–ö–≤–∏–∑ —Å–æ—Ö—Ä–∞–Ω—ë–Ω –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ:\", quizId);\r\n    return quizRes;\r\n  },\r\n\r\n\r\n  \r\n  loadQuizFromServer(id) {\r\n    return this.getQuiz(id);\r\n  },\r\n  \r\n  updateQuizOnServer(id, quizData) {\r\n    return this.updateQuiz(id, quizData);\r\n  },\r\n  \r\n  deleteQuizFromServer(id) {\r\n    return this.deleteQuiz(id);\r\n  },\r\n  \r\n  // –ú–µ—Ç–æ–¥ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ YAML —Ñ–∞–π–ª–∞\r\n  uploadYamlFile(file) {\r\n    const formData = new FormData();\r\n    formData.append('file', file);\r\n    return api.post('/quizzes/upload', formData, {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data'\r\n      }\r\n    });\r\n  },\r\n\r\n  getUsers() {\r\n  return api.get('/users');\r\n  }\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}