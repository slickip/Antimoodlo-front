{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = '/api';\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n  // –î–æ–±–∞–≤–ª—è–µ–º withCredentials –µ—Å–ª–∏ API —Ç—Ä–µ–±—É–µ—Ç –∫—É–∫–∏/—Å–µ—Å—Å–∏–∏\n  // withCredentials: true\n});\n\n// –ò–Ω—Ç–µ—Ä—Ü–µ–ø—Ç–æ—Ä –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\n\n// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫\napi.interceptors.response.use(response => response, error => {\n  if (error.response) {\n    console.error('API Error:', error.response.status, error.response.data);\n    // –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –æ–±—Ä–∞–±–æ—Ç–∫—É –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö —Å—Ç–∞—Ç—É—Å –∫–æ–¥–æ–≤\n    if (error.response.status === 401) {\n      // –ù–∞–ø—Ä–∏–º–µ—Ä, –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤—Ö–æ–¥–∞\n      window.location.href = '/login';\n    }\n  } else if (error.request) {\n    console.error('API Error: No response received', error.request);\n  } else {\n    console.error('API Error:', error.message);\n  }\n  return Promise.reject(error);\n});\n\n// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö —Ñ–æ—Ä–º—ã –≤ —Ñ–æ—Ä–º–∞—Ç API\nconst transformQuizData = quizData => {\n  return {\n    title: quizData.quizTitle,\n    description: quizData.quizDescription,\n    questions: quizData.questions.map(question => ({\n      question: question.text,\n      type: question.type,\n      options: question.options,\n      correct_option_index: question.type === 'single' ? question.correctOption : undefined,\n      correct_option_indexes: question.type === 'multiple' ? question.correctOptions : undefined\n    }))\n  };\n};\nexport default {\n  // –†–∞–±–æ—Ç–∞ —Å —Ç–µ—Å—Ç–∞–º–∏\n  getQuizzes() {\n    return api.get('/quizzes');\n  },\n  getQuiz(id) {\n    return api.get(`/quizzes/${id}`);\n  },\n  createQuiz(quizData) {\n    const payload = {\n      title: quizData.quizTitle,\n      course_id: 1,\n      duration: 30,\n      max_grade: 100,\n      start_date: new Date().toISOString(),\n      end_date: new Date().toISOString(),\n      state_id: 1,\n      submited_date: new Date().toISOString()\n    };\n    return api.post('/quizzes', payload);\n  },\n  updateQuiz(id, quizData) {\n    const transformedData = transformQuizData(quizData);\n    return api.put(`/quizzes/${id}`, transformedData);\n  },\n  deleteQuiz(id) {\n    return api.delete(`/quizzes/${id}`);\n  },\n  // –†–∞–±–æ—Ç–∞ —Å –≤–æ–ø—Ä–æ—Å–∞–º–∏\n  getQuestions(quizId) {\n    return api.get(`/quizzes/${quizId}/questions`);\n  },\n  getQuestion(questionId) {\n    return api.get(`/questions/${questionId}`);\n  },\n  createQuestion(quizId, questionData) {\n    return api.post(`/quizzes/${quizId}/questions`, questionData);\n  },\n  updateQuestion(questionId, questionData) {\n    return api.put(`/questions/${questionId}`, questionData);\n  },\n  deleteQuestion(questionId) {\n    return api.delete(`/questions/${questionId}`);\n  },\n  // –†–∞–±–æ—Ç–∞ —Å –≤–∞—Ä–∏–∞–Ω—Ç–∞–º–∏ –æ—Ç–≤–µ—Ç–æ–≤\n  getOptions(questionId) {\n    return api.get(`/questions/${questionId}/options`);\n  },\n  createOption(questionId, optionData) {\n    return api.post(`/questions/${questionId}/options`, optionData);\n  },\n  updateOption(optionId, optionData) {\n    return api.put(`/qptions/${optionId}`, optionData);\n  },\n  deleteOption(optionId) {\n    return api.delete(`/options/${optionId}`);\n  },\n  // –†–∞–±–æ—Ç–∞ —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –æ—Ç–≤–µ—Ç–∞–º–∏\n  getCorrectAnswers(questionId) {\n    return api.get(`/questions/${questionId}/answers/correct`);\n  },\n  addCorrectAnswer(questionId, answerData) {\n    return api.post(`/questions/${questionId}/answers/correct`, answerData);\n  },\n  deleteCorrectAnswer(answerId) {\n    return api.delete(`/answers/correct/${answerId}`);\n  },\n  async saveQuizToServer(quizData) {\n    const {\n      quizTitle,\n      questions\n    } = quizData;\n\n    // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–π title, –¥–æ–±–∞–≤–ª—è—è timestamp\n    const timestamp = new Date().toISOString();\n    const fullTitle = `${quizTitle} [${timestamp}]`;\n    const payload = {\n      title: fullTitle,\n      course_id: 1,\n      duration: 30,\n      maxgrade: 100,\n      startdate: timestamp,\n      end_date: timestamp,\n      stateid: 1,\n      submiteddate: timestamp\n    };\n    console.log(\"üëâ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ —Å–µ—Ä–≤–µ—Ä:\", payload);\n    await api.post('/quizzes', payload); // –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º response.id\n\n    // –ò—â–µ–º –Ω—É–∂–Ω—ã–π –∫–≤–∏–∑ –ø–æ —Ç–æ—á–Ω–æ–º—É title\n    const allQuizzes = await api.get('/quizzes');\n    const matched = allQuizzes.data.find(q => q.title === fullTitle);\n    if (!matched || !matched.id) {\n      throw new Error(\"–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –∫–≤–∏–∑ –ø–æ—Å–ª–µ —Å–æ–∑–¥–∞–Ω–∏—è\");\n    }\n    const quizId = matched.id;\n    console.log(\"‚úÖ –ü–æ–ª—É—á–µ–Ω quizId:\", quizId);\n\n    // 2) –î–æ–±–∞–≤–ª—è–µ–º –≤–æ–ø—Ä–æ—Å—ã\n    for (const q of questions) {\n      const questionRes = await api.post(`/quizzes/${quizId}/questions`, {\n        questiontext: q.question,\n        question_typeid: q.type === 'single' ? 1 : 2,\n        quizid: quizId\n      });\n      const questionId = questionRes.data.id;\n      console.log('–î–æ–±–∞–≤–ª–µ–Ω –≤–æ–ø—Ä–æ—Å:', questionRes.data);\n\n      // 3) –í–∞—Ä–∏–∞–Ω—Ç—ã –æ—Ç–≤–µ—Ç–æ–≤\n      const optionIds = [];\n      for (const optText of q.options) {\n        const optRes = await api.post(`/questions/${questionId}/options`, {\n          option_text: optText,\n          question_id: questionId\n        });\n        optionIds.push(optRes.data.id);\n      }\n\n      // 4) –ü—Ä–∞–≤–∏–ª—å–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã\n      if (q.type === 'single' && q.correct_option_index != null) {\n        await api.post(`/questions/${questionId}/answers/correct`, {\n          option_id: optionIds[q.correct_option_index],\n          question_id: questionId\n        });\n      } else if (q.type === 'multiple' && Array.isArray(q.correct_option_indexes)) {\n        for (const idx of q.correct_option_indexes) {\n          await api.post(`/questions/${questionId}/answers/correct`, {\n            option_id: optionIds[idx],\n            question_id: questionId\n          });\n        }\n      }\n    }\n    console.log(\"üéâ –ö–≤–∏–∑ —Å–æ—Ö—Ä–∞–Ω—ë–Ω —Å ID:\", quizId);\n    return {\n      id: quizId\n    };\n  },\n  loadQuizFromServer(id) {\n    return this.getQuiz(id);\n  },\n  updateQuizOnServer(id, quizData) {\n    return this.updateQuiz(id, quizData);\n  },\n  deleteQuizFromServer(id) {\n    return this.deleteQuiz(id);\n  },\n  // –ú–µ—Ç–æ–¥ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ YAML —Ñ–∞–π–ª–∞\n  uploadYamlFile(file) {\n    const formData = new FormData();\n    formData.append('file', file);\n    return api.post('/quizzes/upload', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n  },\n  getUsers() {\n    return api.get('/users');\n  }\n};","map":{"version":3,"names":["axios","API_BASE_URL","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","response","error","console","status","data","window","location","href","message","Promise","reject","transformQuizData","quizData","title","quizTitle","description","quizDescription","questions","map","question","text","type","options","correct_option_index","correctOption","undefined","correct_option_indexes","correctOptions","getQuizzes","get","getQuiz","id","createQuiz","payload","course_id","duration","max_grade","start_date","Date","toISOString","end_date","state_id","submited_date","post","updateQuiz","transformedData","put","deleteQuiz","delete","getQuestions","quizId","getQuestion","questionId","createQuestion","questionData","updateQuestion","deleteQuestion","getOptions","createOption","optionData","updateOption","optionId","deleteOption","getCorrectAnswers","addCorrectAnswer","answerData","deleteCorrectAnswer","answerId","saveQuizToServer","timestamp","fullTitle","maxgrade","startdate","stateid","submiteddate","log","allQuizzes","matched","find","q","Error","questionRes","questiontext","question_typeid","quizid","optionIds","optText","optRes","option_text","question_id","push","option_id","Array","isArray","idx","loadQuizFromServer","updateQuizOnServer","deleteQuizFromServer","uploadYamlFile","file","formData","FormData","append","getUsers"],"sources":["C:/Users/IP/Desktop/do_slez/sum25_swp/Antimoodlo-front/src/services/Api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_BASE_URL = '/api';\r\n\r\nconst api = axios.create({\r\n  baseURL: API_BASE_URL,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n  // –î–æ–±–∞–≤–ª—è–µ–º withCredentials –µ—Å–ª–∏ API —Ç—Ä–µ–±—É–µ—Ç –∫—É–∫–∏/—Å–µ—Å—Å–∏–∏\r\n  // withCredentials: true\r\n});\r\n\r\n// –ò–Ω—Ç–µ—Ä—Ü–µ–ø—Ç–æ—Ä –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏\r\napi.interceptors.request.use((config) => {\r\n  const token = localStorage.getItem('token');\r\n  if (token) {\r\n    config.headers.Authorization = `Bearer ${token}`;\r\n  }\r\n  return config;\r\n});\r\n\r\n// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫\r\napi.interceptors.response.use(\r\n  (response) => response,\r\n  (error) => {\r\n    if (error.response) {\r\n      console.error('API Error:', error.response.status, error.response.data);\r\n      // –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –æ–±—Ä–∞–±–æ—Ç–∫—É –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö —Å—Ç–∞—Ç—É—Å –∫–æ–¥–æ–≤\r\n      if (error.response.status === 401) {\r\n        // –ù–∞–ø—Ä–∏–º–µ—Ä, –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤—Ö–æ–¥–∞\r\n        window.location.href = '/login';\r\n      }\r\n    } else if (error.request) {\r\n      console.error('API Error: No response received', error.request);\r\n    } else {\r\n      console.error('API Error:', error.message);\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö —Ñ–æ—Ä–º—ã –≤ —Ñ–æ—Ä–º–∞—Ç API\r\nconst transformQuizData = (quizData) => {\r\n  return {\r\n    title: quizData.quizTitle,\r\n    description: quizData.quizDescription,\r\n    questions: quizData.questions.map(question => ({\r\n      question: question.text,\r\n      type: question.type,\r\n      options: question.options,\r\n      correct_option_index: question.type === 'single' ? question.correctOption : undefined,\r\n      correct_option_indexes: question.type === 'multiple' ? question.correctOptions : undefined\r\n    }))\r\n  };\r\n};\r\n\r\nexport default {\r\n  // –†–∞–±–æ—Ç–∞ —Å —Ç–µ—Å—Ç–∞–º–∏\r\n  getQuizzes() {\r\n    return api.get('/quizzes');\r\n  },\r\n  \r\n  getQuiz(id) {\r\n    return api.get(`/quizzes/${id}`);\r\n  },\r\n  \r\n  createQuiz(quizData) {\r\n  const payload = {\r\n    title: quizData.quizTitle,\r\n    course_id: 1,\r\n    duration: 30,\r\n    max_grade: 100,\r\n    start_date: new Date().toISOString(),\r\n    end_date: new Date().toISOString(),\r\n    state_id: 1,\r\n    submited_date: new Date().toISOString()\r\n  };\r\n  return api.post('/quizzes', payload);\r\n}\r\n,\r\n  \r\n  updateQuiz(id, quizData) {\r\n    const transformedData = transformQuizData(quizData);\r\n    return api.put(`/quizzes/${id}`, transformedData);\r\n  },\r\n  \r\n  deleteQuiz(id) {\r\n    return api.delete(`/quizzes/${id}`);\r\n  },\r\n\r\n  // –†–∞–±–æ—Ç–∞ —Å –≤–æ–ø—Ä–æ—Å–∞–º–∏\r\n  getQuestions(quizId) {\r\n    return api.get(`/quizzes/${quizId}/questions`);\r\n  },\r\n  \r\n  getQuestion(questionId) {\r\n    return api.get(`/questions/${questionId}`);\r\n  },\r\n  \r\n  createQuestion(quizId, questionData) {\r\n    return api.post(`/quizzes/${quizId}/questions`, questionData);\r\n  },\r\n  \r\n  updateQuestion(questionId, questionData) {\r\n    return api.put(`/questions/${questionId}`, questionData);\r\n  },\r\n  \r\n  deleteQuestion(questionId) {\r\n    return api.delete(`/questions/${questionId}`);\r\n  },\r\n\r\n  // –†–∞–±–æ—Ç–∞ —Å –≤–∞—Ä–∏–∞–Ω—Ç–∞–º–∏ –æ—Ç–≤–µ—Ç–æ–≤\r\n  getOptions(questionId) {\r\n    return api.get(`/questions/${questionId}/options`);\r\n  },\r\n  \r\n  createOption(questionId, optionData) {\r\n    return api.post(`/questions/${questionId}/options`, optionData);\r\n  },\r\n  \r\n  updateOption(optionId, optionData) {\r\n    return api.put(`/qptions/${optionId}`, optionData);\r\n  },\r\n  \r\n  deleteOption(optionId) {\r\n    return api.delete(`/options/${optionId}`);\r\n  },\r\n\r\n  // –†–∞–±–æ—Ç–∞ —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –æ—Ç–≤–µ—Ç–∞–º–∏\r\n  getCorrectAnswers(questionId) {\r\n    return api.get(`/questions/${questionId}/answers/correct`);\r\n  },\r\n  \r\n  addCorrectAnswer(questionId, answerData) {\r\n    return api.post(`/questions/${questionId}/answers/correct`, answerData);\r\n  },\r\n  \r\n  deleteCorrectAnswer(answerId) {\r\n    return api.delete(`/answers/correct/${answerId}`);\r\n  },\r\n\r\n async saveQuizToServer(quizData) {\r\n  const { quizTitle, questions } = quizData;\r\n\r\n  // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–π title, –¥–æ–±–∞–≤–ª—è—è timestamp\r\n  const timestamp = new Date().toISOString();\r\n  const fullTitle = `${quizTitle} [${timestamp}]`;\r\n\r\n  const payload = {\r\n    title:         fullTitle,\r\n    course_id:     1,\r\n    duration:      30,\r\n    maxgrade:      100,\r\n    startdate:     timestamp,\r\n    end_date:      timestamp,\r\n    stateid:       1,\r\n    submiteddate:  timestamp\r\n  };\r\n\r\n  console.log(\"üëâ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ —Å–µ—Ä–≤–µ—Ä:\", payload);\r\n  await api.post('/quizzes', payload); // –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º response.id\r\n\r\n  // –ò—â–µ–º –Ω—É–∂–Ω—ã–π –∫–≤–∏–∑ –ø–æ —Ç–æ—á–Ω–æ–º—É title\r\n  const allQuizzes = await api.get('/quizzes');\r\n  const matched = allQuizzes.data.find(q => q.title === fullTitle);\r\n\r\n  if (!matched || !matched.id) {\r\n    throw new Error(\"–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –∫–≤–∏–∑ –ø–æ—Å–ª–µ —Å–æ–∑–¥–∞–Ω–∏—è\");\r\n  }\r\n\r\n  const quizId = matched.id;\r\n  console.log(\"‚úÖ –ü–æ–ª—É—á–µ–Ω quizId:\", quizId);\r\n\r\n  // 2) –î–æ–±–∞–≤–ª—è–µ–º –≤–æ–ø—Ä–æ—Å—ã\r\n  for (const q of questions) {\r\n    const questionRes = await api.post(`/quizzes/${quizId}/questions`, {\r\n      questiontext:     q.question,\r\n      question_typeid:  q.type === 'single' ? 1 : 2,\r\n      quizid:           quizId\r\n    });\r\n\r\n    const questionId = questionRes.data.id;\r\n    console.log('–î–æ–±–∞–≤–ª–µ–Ω –≤–æ–ø—Ä–æ—Å:', questionRes.data);\r\n\r\n    // 3) –í–∞—Ä–∏–∞–Ω—Ç—ã –æ—Ç–≤–µ—Ç–æ–≤\r\n    const optionIds = [];\r\n    for (const optText of q.options) {\r\n      const optRes = await api.post(`/questions/${questionId}/options`, {\r\n        option_text: optText,\r\n        question_id: questionId\r\n      });\r\n      optionIds.push(optRes.data.id);\r\n    }\r\n\r\n    // 4) –ü—Ä–∞–≤–∏–ª—å–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã\r\n    if (q.type === 'single' && q.correct_option_index != null) {\r\n      await api.post(`/questions/${questionId}/answers/correct`, {\r\n        option_id:   optionIds[q.correct_option_index],\r\n        question_id: questionId\r\n      });\r\n    } else if (q.type === 'multiple' && Array.isArray(q.correct_option_indexes)) {\r\n      for (const idx of q.correct_option_indexes) {\r\n        await api.post(`/questions/${questionId}/answers/correct`, {\r\n          option_id:   optionIds[idx],\r\n          question_id: questionId\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  console.log(\"üéâ –ö–≤–∏–∑ —Å–æ—Ö—Ä–∞–Ω—ë–Ω —Å ID:\", quizId);\r\n  return { id: quizId };\r\n},\r\n\r\n\r\n\r\n  \r\n  loadQuizFromServer(id) {\r\n    return this.getQuiz(id);\r\n  },\r\n  \r\n  updateQuizOnServer(id, quizData) {\r\n    return this.updateQuiz(id, quizData);\r\n  },\r\n  \r\n  deleteQuizFromServer(id) {\r\n    return this.deleteQuiz(id);\r\n  },\r\n  \r\n  // –ú–µ—Ç–æ–¥ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ YAML —Ñ–∞–π–ª–∞\r\n  uploadYamlFile(file) {\r\n    const formData = new FormData();\r\n    formData.append('file', file);\r\n    return api.post('/quizzes/upload', formData, {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data'\r\n      }\r\n    });\r\n  },\r\n\r\n  getUsers() {\r\n  return api.get('/users');\r\n  }\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}