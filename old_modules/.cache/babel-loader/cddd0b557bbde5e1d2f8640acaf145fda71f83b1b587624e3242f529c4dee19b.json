{"ast":null,"code":"'use strict';\n\nvar YAMLException = require('./exception');\nvar TYPE_CONSTRUCTOR_OPTIONS = ['kind', 'resolve', 'construct', 'instanceOf', 'predicate', 'represent', 'defaultStyle', 'styleAliases'];\nvar YAML_NODE_KINDS = ['scalar', 'sequence', 'mapping'];\nfunction compileStyleAliases(map) {\n  var result = {};\n  if (map !== null) {\n    Object.keys(map).forEach(function (style) {\n      map[style].forEach(function (alias) {\n        result[String(alias)] = style;\n      });\n    });\n  }\n  return result;\n}\nfunction Type(tag, options) {\n  options = options || {};\n  Object.keys(options).forEach(function (name) {\n    if (TYPE_CONSTRUCTOR_OPTIONS.indexOf(name) === -1) {\n      throw new YAMLException('Unknown option \"' + name + '\" is met in definition of \"' + tag + '\" YAML type.');\n    }\n  });\n\n  // TODO: Add tag format check.\n  this.tag = tag;\n  this.kind = options['kind'] || null;\n  this.resolve = options['resolve'] || function () {\n    return true;\n  };\n  this.construct = options['construct'] || function (data) {\n    return data;\n  };\n  this.instanceOf = options['instanceOf'] || null;\n  this.predicate = options['predicate'] || null;\n  this.represent = options['represent'] || null;\n  this.defaultStyle = options['defaultStyle'] || null;\n  this.styleAliases = compileStyleAliases(options['styleAliases'] || null);\n  if (YAML_NODE_KINDS.indexOf(this.kind) === -1) {\n    throw new YAMLException('Unknown kind \"' + this.kind + '\" is specified for \"' + tag + '\" YAML type.');\n  }\n}\nmodule.exports = Type;","map":{"version":3,"names":["YAMLException","require","TYPE_CONSTRUCTOR_OPTIONS","YAML_NODE_KINDS","compileStyleAliases","map","result","Object","keys","forEach","style","alias","String","Type","tag","options","name","indexOf","kind","resolve","construct","data","instanceOf","predicate","represent","defaultStyle","styleAliases","module","exports"],"sources":["C:/Users/user/Antimoodlo-front/node_modules/js-yaml/lib/js-yaml/type.js"],"sourcesContent":["'use strict';\r\n\r\nvar YAMLException = require('./exception');\r\n\r\nvar TYPE_CONSTRUCTOR_OPTIONS = [\r\n  'kind',\r\n  'resolve',\r\n  'construct',\r\n  'instanceOf',\r\n  'predicate',\r\n  'represent',\r\n  'defaultStyle',\r\n  'styleAliases'\r\n];\r\n\r\nvar YAML_NODE_KINDS = [\r\n  'scalar',\r\n  'sequence',\r\n  'mapping'\r\n];\r\n\r\nfunction compileStyleAliases(map) {\r\n  var result = {};\r\n\r\n  if (map !== null) {\r\n    Object.keys(map).forEach(function (style) {\r\n      map[style].forEach(function (alias) {\r\n        result[String(alias)] = style;\r\n      });\r\n    });\r\n  }\r\n\r\n  return result;\r\n}\r\n\r\nfunction Type(tag, options) {\r\n  options = options || {};\r\n\r\n  Object.keys(options).forEach(function (name) {\r\n    if (TYPE_CONSTRUCTOR_OPTIONS.indexOf(name) === -1) {\r\n      throw new YAMLException('Unknown option \"' + name + '\" is met in definition of \"' + tag + '\" YAML type.');\r\n    }\r\n  });\r\n\r\n  // TODO: Add tag format check.\r\n  this.tag          = tag;\r\n  this.kind         = options['kind']         || null;\r\n  this.resolve      = options['resolve']      || function () { return true; };\r\n  this.construct    = options['construct']    || function (data) { return data; };\r\n  this.instanceOf   = options['instanceOf']   || null;\r\n  this.predicate    = options['predicate']    || null;\r\n  this.represent    = options['represent']    || null;\r\n  this.defaultStyle = options['defaultStyle'] || null;\r\n  this.styleAliases = compileStyleAliases(options['styleAliases'] || null);\r\n\r\n  if (YAML_NODE_KINDS.indexOf(this.kind) === -1) {\r\n    throw new YAMLException('Unknown kind \"' + this.kind + '\" is specified for \"' + tag + '\" YAML type.');\r\n  }\r\n}\r\n\r\nmodule.exports = Type;\r\n"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,aAAa,GAAGC,OAAO,CAAC,aAAa,CAAC;AAE1C,IAAIC,wBAAwB,GAAG,CAC7B,MAAM,EACN,SAAS,EACT,WAAW,EACX,YAAY,EACZ,WAAW,EACX,WAAW,EACX,cAAc,EACd,cAAc,CACf;AAED,IAAIC,eAAe,GAAG,CACpB,QAAQ,EACR,UAAU,EACV,SAAS,CACV;AAED,SAASC,mBAAmBA,CAACC,GAAG,EAAE;EAChC,IAAIC,MAAM,GAAG,CAAC,CAAC;EAEf,IAAID,GAAG,KAAK,IAAI,EAAE;IAChBE,MAAM,CAACC,IAAI,CAACH,GAAG,CAAC,CAACI,OAAO,CAAC,UAAUC,KAAK,EAAE;MACxCL,GAAG,CAACK,KAAK,CAAC,CAACD,OAAO,CAAC,UAAUE,KAAK,EAAE;QAClCL,MAAM,CAACM,MAAM,CAACD,KAAK,CAAC,CAAC,GAAGD,KAAK;MAC/B,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ;EAEA,OAAOJ,MAAM;AACf;AAEA,SAASO,IAAIA,CAACC,GAAG,EAAEC,OAAO,EAAE;EAC1BA,OAAO,GAAGA,OAAO,IAAI,CAAC,CAAC;EAEvBR,MAAM,CAACC,IAAI,CAACO,OAAO,CAAC,CAACN,OAAO,CAAC,UAAUO,IAAI,EAAE;IAC3C,IAAId,wBAAwB,CAACe,OAAO,CAACD,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE;MACjD,MAAM,IAAIhB,aAAa,CAAC,kBAAkB,GAAGgB,IAAI,GAAG,6BAA6B,GAAGF,GAAG,GAAG,cAAc,CAAC;IAC3G;EACF,CAAC,CAAC;;EAEF;EACA,IAAI,CAACA,GAAG,GAAYA,GAAG;EACvB,IAAI,CAACI,IAAI,GAAWH,OAAO,CAAC,MAAM,CAAC,IAAY,IAAI;EACnD,IAAI,CAACI,OAAO,GAAQJ,OAAO,CAAC,SAAS,CAAC,IAAS,YAAY;IAAE,OAAO,IAAI;EAAE,CAAC;EAC3E,IAAI,CAACK,SAAS,GAAML,OAAO,CAAC,WAAW,CAAC,IAAO,UAAUM,IAAI,EAAE;IAAE,OAAOA,IAAI;EAAE,CAAC;EAC/E,IAAI,CAACC,UAAU,GAAKP,OAAO,CAAC,YAAY,CAAC,IAAM,IAAI;EACnD,IAAI,CAACQ,SAAS,GAAMR,OAAO,CAAC,WAAW,CAAC,IAAO,IAAI;EACnD,IAAI,CAACS,SAAS,GAAMT,OAAO,CAAC,WAAW,CAAC,IAAO,IAAI;EACnD,IAAI,CAACU,YAAY,GAAGV,OAAO,CAAC,cAAc,CAAC,IAAI,IAAI;EACnD,IAAI,CAACW,YAAY,GAAGtB,mBAAmB,CAACW,OAAO,CAAC,cAAc,CAAC,IAAI,IAAI,CAAC;EAExE,IAAIZ,eAAe,CAACc,OAAO,CAAC,IAAI,CAACC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE;IAC7C,MAAM,IAAIlB,aAAa,CAAC,gBAAgB,GAAG,IAAI,CAACkB,IAAI,GAAG,sBAAsB,GAAGJ,GAAG,GAAG,cAAc,CAAC;EACvG;AACF;AAEAa,MAAM,CAACC,OAAO,GAAGf,IAAI","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}