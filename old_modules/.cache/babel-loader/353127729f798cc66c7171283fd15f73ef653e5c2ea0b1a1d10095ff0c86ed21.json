{"ast":null,"code":"'use strict';\n\nvar Type = require('../../type');\nfunction resolveJavascriptRegExp(data) {\n  if (data === null) return false;\n  if (data.length === 0) return false;\n  var regexp = data,\n    tail = /\\/([gim]*)$/.exec(data),\n    modifiers = '';\n\n  // if regexp starts with '/' it can have modifiers and must be properly closed\n  // `/foo/gim` - modifiers tail can be maximum 3 chars\n  if (regexp[0] === '/') {\n    if (tail) modifiers = tail[1];\n    if (modifiers.length > 3) return false;\n    // if expression starts with /, is should be properly terminated\n    if (regexp[regexp.length - modifiers.length - 1] !== '/') return false;\n  }\n  return true;\n}\nfunction constructJavascriptRegExp(data) {\n  var regexp = data,\n    tail = /\\/([gim]*)$/.exec(data),\n    modifiers = '';\n\n  // `/foo/gim` - tail can be maximum 4 chars\n  if (regexp[0] === '/') {\n    if (tail) modifiers = tail[1];\n    regexp = regexp.slice(1, regexp.length - modifiers.length - 1);\n  }\n  return new RegExp(regexp, modifiers);\n}\nfunction representJavascriptRegExp(object /*, style*/) {\n  var result = '/' + object.source + '/';\n  if (object.global) result += 'g';\n  if (object.multiline) result += 'm';\n  if (object.ignoreCase) result += 'i';\n  return result;\n}\nfunction isRegExp(object) {\n  return Object.prototype.toString.call(object) === '[object RegExp]';\n}\nmodule.exports = new Type('tag:yaml.org,2002:js/regexp', {\n  kind: 'scalar',\n  resolve: resolveJavascriptRegExp,\n  construct: constructJavascriptRegExp,\n  predicate: isRegExp,\n  represent: representJavascriptRegExp\n});","map":{"version":3,"names":["Type","require","resolveJavascriptRegExp","data","length","regexp","tail","exec","modifiers","constructJavascriptRegExp","slice","RegExp","representJavascriptRegExp","object","result","source","global","multiline","ignoreCase","isRegExp","Object","prototype","toString","call","module","exports","kind","resolve","construct","predicate","represent"],"sources":["C:/Users/user/Antimoodlo-front/node_modules/js-yaml/lib/js-yaml/type/js/regexp.js"],"sourcesContent":["'use strict';\r\n\r\nvar Type = require('../../type');\r\n\r\nfunction resolveJavascriptRegExp(data) {\r\n  if (data === null) return false;\r\n  if (data.length === 0) return false;\r\n\r\n  var regexp = data,\r\n      tail   = /\\/([gim]*)$/.exec(data),\r\n      modifiers = '';\r\n\r\n  // if regexp starts with '/' it can have modifiers and must be properly closed\r\n  // `/foo/gim` - modifiers tail can be maximum 3 chars\r\n  if (regexp[0] === '/') {\r\n    if (tail) modifiers = tail[1];\r\n\r\n    if (modifiers.length > 3) return false;\r\n    // if expression starts with /, is should be properly terminated\r\n    if (regexp[regexp.length - modifiers.length - 1] !== '/') return false;\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\nfunction constructJavascriptRegExp(data) {\r\n  var regexp = data,\r\n      tail   = /\\/([gim]*)$/.exec(data),\r\n      modifiers = '';\r\n\r\n  // `/foo/gim` - tail can be maximum 4 chars\r\n  if (regexp[0] === '/') {\r\n    if (tail) modifiers = tail[1];\r\n    regexp = regexp.slice(1, regexp.length - modifiers.length - 1);\r\n  }\r\n\r\n  return new RegExp(regexp, modifiers);\r\n}\r\n\r\nfunction representJavascriptRegExp(object /*, style*/) {\r\n  var result = '/' + object.source + '/';\r\n\r\n  if (object.global) result += 'g';\r\n  if (object.multiline) result += 'm';\r\n  if (object.ignoreCase) result += 'i';\r\n\r\n  return result;\r\n}\r\n\r\nfunction isRegExp(object) {\r\n  return Object.prototype.toString.call(object) === '[object RegExp]';\r\n}\r\n\r\nmodule.exports = new Type('tag:yaml.org,2002:js/regexp', {\r\n  kind: 'scalar',\r\n  resolve: resolveJavascriptRegExp,\r\n  construct: constructJavascriptRegExp,\r\n  predicate: isRegExp,\r\n  represent: representJavascriptRegExp\r\n});\r\n"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,IAAI,GAAGC,OAAO,CAAC,YAAY,CAAC;AAEhC,SAASC,uBAAuBA,CAACC,IAAI,EAAE;EACrC,IAAIA,IAAI,KAAK,IAAI,EAAE,OAAO,KAAK;EAC/B,IAAIA,IAAI,CAACC,MAAM,KAAK,CAAC,EAAE,OAAO,KAAK;EAEnC,IAAIC,MAAM,GAAGF,IAAI;IACbG,IAAI,GAAK,aAAa,CAACC,IAAI,CAACJ,IAAI,CAAC;IACjCK,SAAS,GAAG,EAAE;;EAElB;EACA;EACA,IAAIH,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;IACrB,IAAIC,IAAI,EAAEE,SAAS,GAAGF,IAAI,CAAC,CAAC,CAAC;IAE7B,IAAIE,SAAS,CAACJ,MAAM,GAAG,CAAC,EAAE,OAAO,KAAK;IACtC;IACA,IAAIC,MAAM,CAACA,MAAM,CAACD,MAAM,GAAGI,SAAS,CAACJ,MAAM,GAAG,CAAC,CAAC,KAAK,GAAG,EAAE,OAAO,KAAK;EACxE;EAEA,OAAO,IAAI;AACb;AAEA,SAASK,yBAAyBA,CAACN,IAAI,EAAE;EACvC,IAAIE,MAAM,GAAGF,IAAI;IACbG,IAAI,GAAK,aAAa,CAACC,IAAI,CAACJ,IAAI,CAAC;IACjCK,SAAS,GAAG,EAAE;;EAElB;EACA,IAAIH,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;IACrB,IAAIC,IAAI,EAAEE,SAAS,GAAGF,IAAI,CAAC,CAAC,CAAC;IAC7BD,MAAM,GAAGA,MAAM,CAACK,KAAK,CAAC,CAAC,EAAEL,MAAM,CAACD,MAAM,GAAGI,SAAS,CAACJ,MAAM,GAAG,CAAC,CAAC;EAChE;EAEA,OAAO,IAAIO,MAAM,CAACN,MAAM,EAAEG,SAAS,CAAC;AACtC;AAEA,SAASI,yBAAyBA,CAACC,MAAM,CAAC,aAAa;EACrD,IAAIC,MAAM,GAAG,GAAG,GAAGD,MAAM,CAACE,MAAM,GAAG,GAAG;EAEtC,IAAIF,MAAM,CAACG,MAAM,EAAEF,MAAM,IAAI,GAAG;EAChC,IAAID,MAAM,CAACI,SAAS,EAAEH,MAAM,IAAI,GAAG;EACnC,IAAID,MAAM,CAACK,UAAU,EAAEJ,MAAM,IAAI,GAAG;EAEpC,OAAOA,MAAM;AACf;AAEA,SAASK,QAAQA,CAACN,MAAM,EAAE;EACxB,OAAOO,MAAM,CAACC,SAAS,CAACC,QAAQ,CAACC,IAAI,CAACV,MAAM,CAAC,KAAK,iBAAiB;AACrE;AAEAW,MAAM,CAACC,OAAO,GAAG,IAAIzB,IAAI,CAAC,6BAA6B,EAAE;EACvD0B,IAAI,EAAE,QAAQ;EACdC,OAAO,EAAEzB,uBAAuB;EAChC0B,SAAS,EAAEnB,yBAAyB;EACpCoB,SAAS,EAAEV,QAAQ;EACnBW,SAAS,EAAElB;AACb,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}