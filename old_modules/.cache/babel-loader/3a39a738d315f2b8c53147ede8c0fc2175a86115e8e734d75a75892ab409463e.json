{"ast":null,"code":"// Standard YAML's JSON schema.\n// http://www.yaml.org/spec/1.2/spec.html#id2803231\n//\n// NOTE: JS-YAML does not support schema-specific tag resolution restrictions.\n// So, this schema is not such strict as defined in the YAML specification.\n// It allows numbers in binary notaion, use `Null` and `NULL` as `null`, etc.\n\n'use strict';\n\nvar Schema = require('../schema');\nmodule.exports = new Schema({\n  include: [require('./failsafe')],\n  implicit: [require('../type/null'), require('../type/bool'), require('../type/int'), require('../type/float')]\n});","map":{"version":3,"names":["Schema","require","module","exports","include","implicit"],"sources":["C:/Users/user/Antimoodlo-front/node_modules/js-yaml/lib/js-yaml/schema/json.js"],"sourcesContent":["// Standard YAML's JSON schema.\r\n// http://www.yaml.org/spec/1.2/spec.html#id2803231\r\n//\r\n// NOTE: JS-YAML does not support schema-specific tag resolution restrictions.\r\n// So, this schema is not such strict as defined in the YAML specification.\r\n// It allows numbers in binary notaion, use `Null` and `NULL` as `null`, etc.\r\n\r\n\r\n'use strict';\r\n\r\n\r\nvar Schema = require('../schema');\r\n\r\n\r\nmodule.exports = new Schema({\r\n  include: [\r\n    require('./failsafe')\r\n  ],\r\n  implicit: [\r\n    require('../type/null'),\r\n    require('../type/bool'),\r\n    require('../type/int'),\r\n    require('../type/float')\r\n  ]\r\n});\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AAGA,YAAY;;AAGZ,IAAIA,MAAM,GAAGC,OAAO,CAAC,WAAW,CAAC;AAGjCC,MAAM,CAACC,OAAO,GAAG,IAAIH,MAAM,CAAC;EAC1BI,OAAO,EAAE,CACPH,OAAO,CAAC,YAAY,CAAC,CACtB;EACDI,QAAQ,EAAE,CACRJ,OAAO,CAAC,cAAc,CAAC,EACvBA,OAAO,CAAC,cAAc,CAAC,EACvBA,OAAO,CAAC,aAAa,CAAC,EACtBA,OAAO,CAAC,eAAe,CAAC;AAE5B,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}